
@mixin clip-animation-mixin( $name, $clipW, $clipH, $pathW ) {
  @keyframes #{ $name } {
    0%, 100% {clip: rect(0px, $clipW, $pathW, 0px); }
    25% {clip: rect(0px, $pathW, $clipH, 0px); }
    50% {clip: rect(calc( #{ $clipH } - #{ $pathW } ), $clipW, $clipH, 0px); }
    75% {clip: rect(0px, $clipW, $clipH, calc( #{ $clipW } - #{ $pathW } )); }
  }
}

@mixin circle-animation-mixin( $name, $clipW ) {
  @keyframes #{ $name } {
    0%, 100% {
      top: -3.25rem;
      left: 1.25rem;
    }
    45% {
      top: -3.25rem;
      left: $clipW;
    }
    55% {
      top: -3.25rem;
      left: $clipW;
      transform: scaleX(-1);
      transition: transform .3s;
    }
    // 50% {
    //   top: -3.25rem;
    //   left: $clipW;
    // }
  }
}


$size__site_content_width: 1024px;

$media_queries : (
    'mobile'    : "only screen and (max-width: 414px)",
    'mobile-plus'    : "only screen and (min-width: 415px) and (max-width: 767px)",
    'tablet'    : "only screen and (min-width: 768px) and (max-width: #{$size__site_content_width})",
    'desktop'   : "only screen and (min-width: (calc(#{$size__site_content_width} + 1px)))",
    // 'retina2'   : "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)",
    // 'retina3'   : "only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)",
    'landscape' : "screen and (orientation:landscape) ",    
    'portrait'  : "screen and (orientation:portrait) "
);

@mixin for_breakpoint( $breakpoints ) {
    $conditions : ();
    @each $breakpoint in $breakpoints {

        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{ inspect( map-get( $media_queries, $breakpoint ) ) },
            $separator: comma
        );
    }

    @media #{$conditions} {
        @content;
    }

}